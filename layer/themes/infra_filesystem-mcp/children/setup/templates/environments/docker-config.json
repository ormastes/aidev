{
  "name": "docker-environment",
  "description": "Docker containerization for development and deployment",
  "supported_architectures": ["x86_64", "arm64"],
  "files": {
    "Dockerfile": "# Multi-stage build for ${LANGUAGE} application\n# Development stage\nFROM ${BASE_IMAGE} as development\n\nWORKDIR /app\n\n# Copy dependency files\nCOPY ${DEPENDENCY_FILES} .\n\n# Install dependencies\nRUN ${INSTALL_COMMAND}\n\n# Copy source code\nCOPY . .\n\n# Build application\nRUN ${BUILD_COMMAND}\n\n# Production stage\nFROM ${RUNTIME_IMAGE} as production\n\nWORKDIR /app\n\n# Copy built application\nCOPY --from=development /app/${BUILD_OUTPUT} .\n\n# Expose port\nEXPOSE ${PORT}\n\n# Run application\nCMD [\"${RUN_COMMAND}\"]",
    "docker-compose.yml": "version: '3.8'\n\nservices:\n  app:\n    build:\n      context: .\n      target: ${TARGET:-development}\n    container_name: ${PROJECT_NAME}\n    ports:\n      - \"${PORT:-3000}:${PORT:-3000}\"\n    volumes:\n      - .:/app\n      - /app/node_modules\n    environment:\n      - NODE_ENV=${NODE_ENV:-development}\n    networks:\n      - app-network\n\nnetworks:\n  app-network:\n    driver: bridge",
    ".dockerignore": "node_modules\n*.log\n.git\n.gitignore\nREADME.md\n.env\n.vscode\n.idea\ndist\nbuild\n*.pyc\n__pycache__\n.pytest_cache\n*.egg-info"
  },
  "language_configs": {
    "typescript": {
      "BASE_IMAGE": "node:18-alpine",
      "RUNTIME_IMAGE": "node:18-alpine",
      "DEPENDENCY_FILES": "package*.json",
      "INSTALL_COMMAND": "bun install --frozen-lockfile",
      "BUILD_COMMAND": "bun run build",
      "BUILD_OUTPUT": "dist",
      "RUN_COMMAND": "node dist/index.js",
      "PORT": "3000"
    },
    "python": {
      "BASE_IMAGE": "python:3.10-slim",
      "RUNTIME_IMAGE": "python:3.10-slim",
      "DEPENDENCY_FILES": "requirements.txt",
      "INSTALL_COMMAND": "pip install -r requirements.txt",
      "BUILD_COMMAND": "python -m compileall .",
      "BUILD_OUTPUT": ".",
      "RUN_COMMAND": "python main.py",
      "PORT": "5000"
    },
    "cpp": {
      "BASE_IMAGE": "gcc:11",
      "RUNTIME_IMAGE": "debian:bullseye-slim",
      "DEPENDENCY_FILES": "CMakeLists.txt",
      "INSTALL_COMMAND": "apt-get update && apt-get install -y cmake",
      "BUILD_COMMAND": "cmake . && make",
      "BUILD_OUTPUT": "bin",
      "RUN_COMMAND": "./app",
      "PORT": "8080"
    }
  }
}