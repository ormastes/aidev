{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Distributed Feature VF Schema",
  "description": "JSON Schema for distributed FEATURE.vf.json - hierarchical feature management across root/epic/theme/user-story levels",
  "type": "object",
  "properties": {
    "metadata": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "enum": ["root", "epic", "theme", "user_story"],
          "description": "Hierarchical level of this feature file"
        },
        "parent_id": {
          "type": "string",
          "description": "ID of parent feature (null for root level)"
        },
        "common_epic": {
          "type": "string",
          "description": "ID of common epic if no direct parent epic exists"
        },
        "path": {
          "type": "string",
          "description": "Virtual file path within the hierarchy"
        },
        "version": {
          "type": "string",
          "default": "1.0.0"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["level", "path", "version", "created_at", "updated_at"]
    },
    "features": {
      "type": "object",
      "description": "Features grouped by category name, compatible with VFNameIdWrapper",
      "additionalProperties": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/distributed_feature"
        }
      }
    },
    "children": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Paths to child FEATURE.vf.json files"
    },
    "aggregated_view": {
      "type": "object",
      "description": "Virtual aggregated content from all child levels",
      "additionalProperties": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/distributed_feature"
        }
      }
    }
  },
  "required": ["metadata", "features"],
  "definitions": {
    "distributed_feature": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the feature"
        },
        "name": {
          "type": "string",
          "description": "Feature name (used by VFNameIdWrapper for grouping)"
        },
        "data": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Feature title"
            },
            "description": {
              "type": "string",
              "description": "Detailed feature description"
            },
            "level": {
              "type": "string",
              "enum": ["root", "epic", "theme", "user_story"],
              "description": "Which hierarchical level this feature belongs to"
            },
            "parent_feature_id": {
              "type": "string",
              "description": "ID of parent feature if exists"
            },
            "epic_id": {
              "type": "string",
              "description": "ID of associated epic (auto-assigned if none)"
            },
            "status": {
              "type": "string",
              "enum": ["planned", "in-progress", "completed", "blocked"],
              "description": "Current status"
            },
            "priority": {
              "type": "string",
              "enum": ["critical", "high", "medium", "low"],
              "description": "Feature priority"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Tags for categorization"
            },
            "assignee": {
              "type": "string",
              "description": "Who is working on this"
            },
            "dueDate": {
              "type": "string",
              "format": "date",
              "description": "Target completion date"
            },
            "dependencies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Feature IDs this depends on"
            },
            "components": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Related components or modules"
            },
            "acceptanceCriteria": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of acceptance criteria"
            },
            "child_features": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "IDs of child features at lower levels"
            },
            "virtual_path": {
              "type": "string",
              "description": "Virtual file path where this feature is defined"
            }
          },
          "required": ["title", "description", "level", "status", "priority"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["id", "name", "data", "createdAt", "updatedAt"]
    }
  },
  "examples": [
    {
      "metadata": {
        "level": "root",
        "path": "/FEATURE.vf.json",
        "version": "1.0.0",
        "created_at": "2025-01-20T10:00:00Z",
        "updated_at": "2025-01-20T10:00:00Z"
      },
      "features": {
        "platform": [
          {
            "id": "root-001",
            "name": "AI Development Platform",
            "data": {
              "title": "AI Development Platform",
              "description": "Complete platform for AI-assisted development",
              "level": "root",
              "status": "in-progress",
              "priority": "critical",
              "tags": ["platform", "ai", "development"],
              "child_features": ["epic-001", "epic-002"],
              "virtual_path": "/FEATURE.vf.json"
            },
            "createdAt": "2025-01-20T10:00:00Z",
            "updatedAt": "2025-01-20T10:00:00Z"
          }
        ]
      },
      "children": [
        "/layer/themes/filesystem_mcp/FEATURE.vf.json",
        "/layer/themes/gui_coordinator/FEATURE.vf.json"
      ],
      "aggregated_view": {
        "platform": [
          {
            "id": "root-001",
            "name": "AI Development Platform",
            "data": {
              "title": "AI Development Platform",
              "description": "Complete platform for AI-assisted development",
              "level": "root",
              "status": "in-progress",
              "priority": "critical",
              "virtual_path": "/FEATURE.vf.json"
            },
            "createdAt": "2025-01-20T10:00:00Z",
            "updatedAt": "2025-01-20T10:00:00Z"
          }
        ],
        "filesystem": [
          {
            "id": "epic-001",
            "name": "Virtual File System",
            "data": {
              "title": "Virtual File System with MCP Integration",
              "description": "Implement virtual file system using filesystem_mcp",
              "level": "epic",
              "parent_feature_id": "root-001",
              "status": "in-progress",
              "priority": "high",
              "virtual_path": "/layer/themes/filesystem_mcp/FEATURE.vf.json"
            },
            "createdAt": "2025-01-20T10:00:00Z",
            "updatedAt": "2025-01-20T10:00:00Z"
          }
        ]
      }
    },
    {
      "metadata": {
        "level": "epic",
        "parent_id": "root-001",
        "path": "/layer/themes/filesystem_mcp/FEATURE.vf.json",
        "version": "1.0.0",
        "created_at": "2025-01-20T10:00:00Z",
        "updated_at": "2025-01-20T10:00:00Z"
      },
      "features": {
        "filesystem": [
          {
            "id": "epic-001",
            "name": "Virtual File System",
            "data": {
              "title": "Virtual File System with MCP Integration",
              "description": "Implement virtual file system using filesystem_mcp",
              "level": "epic",
              "parent_feature_id": "root-001",
              "status": "in-progress",
              "priority": "high",
              "tags": ["filesystem", "mcp", "integration"],
              "child_features": ["theme-001", "theme-002"],
              "virtual_path": "/layer/themes/filesystem_mcp/FEATURE.vf.json"
            },
            "createdAt": "2025-01-20T10:00:00Z",
            "updatedAt": "2025-01-20T10:00:00Z"
          }
        ]
      },
      "children": [
        "/layer/themes/filesystem_mcp/user-stories/vf-file-wrapper/FEATURE.vf.json",
        "/layer/themes/filesystem_mcp/user-stories/vf-name-id-wrapper/FEATURE.vf.json"
      ]
    }
  ]
}