# Production Environment Docker Compose Template
# Usage: docker-compose -f docker-compose.production.yml up -d

version: '3.8'

services:
  app:
    image: ${IMAGE_NAME:-aidev/app}:${VERSION:-latest}
    container_name: ${CONTAINER_NAME:-app}-prod
    deploy:
      replicas: ${REPLICAS:-2}
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.3
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '${CPU_LIMIT:-2}'
          memory: ${MEMORY_LIMIT:-2G}
        reservations:
          cpus: '0.5'
          memory: 512M
    ports:
      - "${PORT:-80}:3000"
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    environment:
      NODE_ENV: production
      ENVIRONMENT: ${ENVIRONMENT:-production}
      VERSION: ${VERSION:-1.0.0}
    networks:
      - production-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
        labels: "environment,service,version"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - app
    networks:
      - production-network
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "3"

volumes:
  app_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_PATH:-./logs}
  nginx_cache:
    driver: local

networks:
  production-network:
    driver: overlay
    attachable: true
    encrypted: true
    ipam:
      config:
        - subnet: 10.0.0.0/24

secrets:
  ssl_cert:
    file: ./certs/cert.pem
  ssl_key:
    file: ./certs/key.pem